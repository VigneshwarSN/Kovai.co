import pandas as pd
df = pd.read_csv("/content/Daily_Public_Transport_Passenger_Journeys_by_Service_Type.csv")

df.isnull().values.any()
df.head()
df.tail()

df.isnull().sum()
df['Other'] = df['Other'].interpolate(method='linear')

import numpy as np
print(df.columns)
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("Daily_Public_Transport_Passenger_Journeys_by_Service_Type.csv")
df['Date'] = pd.to_datetime(df['Date'], dayfirst=True)
df['Total Journeys'] = df[['Local Route', 'Light Rail', 'Peak Service', 'Rapid Route', 'School', 'Other']].sum(axis=1)

plt.figure(figsize=(12, 5))
plt.plot(df['Date'], df['Total Journeys'], color='blue')
plt.title("Total Daily Passenger Journeys")
plt.xlabel("Date")
plt.ylabel("Total Journeys")
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title("Correlation Between Service Types")
plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 2))
sns.heatmap(df.isnull(), cbar=False, cmap='gray')
plt.title("Missing Values in Dataset")
plt.tight_layout()
plt.show()

#Building Model
import pandas as pd
import xgboost as xgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score


df = pd.read_csv("Daily_Public_Transport_Passenger_Journeys_by_Service_Type.csv")

df['Total Journeys'] = df[['Local Route', 'Light Rail', 'Peak Service', 'Rapid Route', 'School', 'Other']].sum(axis=1)

X = df.drop(columns=['Date', 'Total Journeys'])  # Drop date and target
y = df['Total Journeys']


X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

model = xgb.XGBRegressor(
    objective='reg:squarederror',
    n_estimators=100,
    learning_rate=0.1,
    max_depth=5,
    random_state=42
)
model.fit(X_train, y_train)


y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"RÂ² Score: {r2:.2f}")



